apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.fmf.fmfnote"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        compileOptions {

            sourceCompatibility JavaVersion.VERSION_1_8

            targetCompatibility JavaVersion.VERSION_1_8

        }
        kotlinOptions {
            jvmTarget = '1.8'
        }

        buildFeatures {
            viewBinding = true
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'


    implementation 'com.google.android.material:material:1.2.1'



    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'



    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    //anko-sdk27-coroutines 是可选项，提供了一些 UI 组件更为简洁的扩展，例如 onClick，但它也有自己的问题，我们后面详细探讨 提供 onClick 类似的便捷的 listener，接收 suspend Lambda 表达式
   // implementation "org.jetbrains.anko:anko-sdk27-coroutines:1.3.9"
   //提供 bg 、asReference，尚未没有跟进 kotlin 1.3 的正式版协程，不过代码比较简单，如果需要可以自己改造
  //  implementation "org.jetbrains.anko:anko-coroutines:1.3.9"


    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"



    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.0'
    implementation "com.squareup.retrofit2:converter-gson:2.7.0"


    implementation "com.squareup.okhttp3:logging-interceptor:3.14.2"

    api 'com.google.code.gson:gson:2.8.5'
    api 'com.squareup.retrofit2:converter-gson:2.6.1'


     //为 Retrofit 添加对 Deferred 的支持，这需要用到开源库：
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'


    implementation 'ru.gildor.coroutines:kotlin-coroutines-retrofit:1.1.0'

  //  不仅支持 Activity 还支持 support-fragment 版本在 25.1.0 以上的版本的 Fragment，并且类似于 Anko 提供了一些有用的基于 MainScope 的 listener 扩展，源码地址：kotlin-coroutines-android(https://github.com/enbandari/kotlin-coroutines-android)
    implementation  'com.bennyhuo.kotlin:coroutines-android-mainscope:1.0'


//autodisposable 支持自动取消协程：
//源码同样在这里：kotlin-coroutines-android(https://github.com/enbandari/kotlin-coroutines-android)
  //  api "com.bennyhuo.kotlin:coroutines-android-autodisposable:1.0"


    def lifecycle_version = "2.2.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"


    //room
  //  implementation "androidx.room:room-runtime:2.2.5"
  //  implementation "androidx.room:room-ktx:2.2.5"
  //  kapt "androidx.room:room-compiler:2.2.5"

}
